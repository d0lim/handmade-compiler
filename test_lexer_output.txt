1 KEYWORD class
1 IDENTIFIER test
1 LBRACE {
3 VARIABLE TYPE int
3 IDENTIFIER main
3 LPAREN (
3 VARIABLE TYPE String
3 IDENTIFIER args
3 RPAREN )
3 LBRACE {
4 VARIABLE TYPE int
4 IDENTIFIER _aa_a
4 ASSIGNMENT OPERATOR =
4 SIGNED INTEGER 0
4 TERMINATING SYMBOL ;
5 VARIABLE TYPE char
5 IDENTIFIER b_b123
5 ASSIGNMENT OPERATOR =
5 SINGLE CHARACTER '8'
5 TERMINATING SYMBOL ;
6 VARIABLE TYPE boolean
6 IDENTIFIER __cc
6 ASSIGNMENT OPERATOR =
6 BOOLEAN STRING true
6 TERMINATING SYMBOL ;
7 VARIABLE TYPE String
7 IDENTIFIER d__d_0
7 ASSIGNMENT OPERATOR =
7 LITERAL STRING "Hello World 123"
7 TERMINATING SYMBOL ;
8 VARIABLE TYPE char
8 IDENTIFIER if_123if
8 ASSIGNMENT OPERATOR =
8 SINGLE CHARACTER ' '
8 TERMINATING SYMBOL ;
9 VARIABLE TYPE int
9 IDENTIFIER _123if0
9 ASSIGNMENT OPERATOR =
9 SIGNED INTEGER -1
9 ARITHMETIC OPERATOR -
9 SIGNED INTEGER 0
9 TERMINATING SYMBOL ;
10 VARIABLE TYPE int
10 IDENTIFIER publice
10 ASSIGNMENT OPERATOR =
10 SIGNED INTEGER -10
10 TERMINATING SYMBOL ;
12 KEYWORD if
12 LPAREN (
12 BOOLEAN STRING true
12 RPAREN )
12 LBRACE {
13 IDENTIFIER _aa_a
13 ASSIGNMENT OPERATOR =
13 SIGNED INTEGER 3923
13 ARITHMETIC OPERATOR *
13 SIGNED INTEGER 41
13 ARITHMETIC OPERATOR -
13 SIGNED INTEGER -1
13 ARITHMETIC OPERATOR -
13 SIGNED INTEGER -1
13 ARITHMETIC OPERATOR -
13 SIGNED INTEGER 1
13 ARITHMETIC OPERATOR -
13 SIGNED INTEGER 1
13 ARITHMETIC OPERATOR /
13 SIGNED INTEGER 10
13 ARITHMETIC OPERATOR +
13 SIGNED INTEGER 2
13 TERMINATING SYMBOL ;
14 RBRACE }
14 KEYWORD else
14 LBRACE {
15 IDENTIFIER b_b123
15 ASSIGNMENT OPERATOR =
15 SINGLE CHARACTER '3'
15 TERMINATING SYMBOL ;
16 RBRACE }
18 KEYWORD while
18 LPAREN (
18 BOOLEAN STRING false
18 RPAREN )
18 LBRACE {
19 IDENTIFIER __cc
19 ASSIGNMENT OPERATOR =
19 BOOLEAN STRING false
19 TERMINATING SYMBOL ;
20 RBRACE }
22 KEYWORD return
22 SIGNED INTEGER 0
22 TERMINATING SYMBOL ;
23 RBRACE }
25 RBRACE }
