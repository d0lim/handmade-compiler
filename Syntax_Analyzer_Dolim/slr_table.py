class SlrTable:
    def __init__(self):
        self.rule = {
            0: ("S", ["CODE"]),
            1: ("CODE", ["CDECL", "CODE"]),
            2: ("CODE", ["FDECL", "CODE"]),
            3: ("CODE", ["VDECL", "CODE"]),
            4: ("CODE", []),
            5: ("VDECL", ["vtype", "id", "semi"]),
            6: ("VDECL", ["vtype", "ASSIGN", "semi"]),
            7: ("ASSIGN", ["id", "assign", "RHS"]),
            8: ("RHS", ["EXPR"]),
            9: ("RHS", ["literal"]),
            10: ("RHS", ["character"]),
            11: ("RHS", ["boolstr"]),
            12: ("EXPR", ["T", "addsub", "EXPR"]),
            13: ("EXPR", ["T"]),
            14: ("T", ["F", "multdiv", "T"]),
            15: ("T", ["F"]),
            16: ("F", ["lparen", "EXPR", "rparen"]),
            17: ("F", ["id"]),
            18: ("F", ["num"]),
            19: (
                "FDECL",
                [
                    "vtype",
                    "id",
                    "lparen",
                    "ARG",
                    "rparen",
                    "lbrace",
                    "BLOCK",
                    "RETURN",
                    "rbrace",
                ],
            ),
            20: ("ARG", ["vtype", "id", "MOREARGS"]),
            21: ("ARG", []),
            22: ("MOREARGS", ["comma", "vtype", "id", "MOREARGS"]),
            23: ("MOREARGS", []),
            24: ("BLOCK", ["STMT", "BLOCK"]),
            25: ("BLOCK", []),
            26: ("STMT", ["VDECL"]),
            27: ("STMT", ["ASSIGN", "semi"]),
            28: (
                "STMT",
                ["if", "lparen", "COND", "rparen", "lbrace", "BLOCK", "rbrace", "ELSE"],
            ),
            29: (
                "STMT",
                ["while", "lparen", "COND", "rparen", "lbrace", "BLOCK", "rbrace"],
            ),
            30: ("COND", ["lparen", "COND", "comp", "COND", "rparen"]),
            31: ("COND", ["boolstr"]),
            32: ("ELSE", ["else", "lbrace", "BLOCK", "rbrace"]),
            33: ("ELSE", []),
            34: ("RETURN", ["return", "RHS", "semi"]),
            35: ("CDECL", ["class", "id", "lbrace", "ODECL", "rbrace"]),
            36: ("ODECL", ["VDECL", "ODECL"]),
            37: ("ODECL", ["FDECL", "ODECL"]),
            38: ("ODECL", []),
        }

        self.table = {
            0: {
                "vtype": ("s", 6),
                "class": ("s", 5),
                "$": ("r", 4),
                "CODE": ("goto", 1),
                "VDECL": ("goto", 4),
                "FDECL": ("goto", 3),
                "CDECL": ("goto", 2),
            },
            1: {
                "$": "acc",
            },
            2: {
                "vtype": ("s", 6),
                "class": ("s", 5),
                "$": ("r", 4),
                "CODE": ("goto", 7),
                "VDECL": ("goto", 4),
                "FDECL": ("goto", 3),
                "CDECL": ("goto", 2),
            },
            3: {
                "vtype": ("s", 6),
                "class": ("s", 5),
                "$": ("r", 4),
                "CODE": ("goto", 8),
                "VDECL": ("goto", 4),
                "FDECL": ("goto", 3),
                "CDECL": ("goto", 2),
            },
            4: {
                "vtype": ("s", 6),
                "class": ("s", 5),
                "$": ("r", 4),
                "CODE": ("goto", 9),
                "VDECL": ("goto", 4),
                "FDECL": ("goto", 3),
                "CDECL": ("goto", 2),
            },
            5: {
                "id": ("s", 10),
            },
            6: {
                "id": ("s", 11),
                "ASSIGN": ("goto", 12),
            },
            7: {
                "$": ("r", 1),
            },
            8: {
                "$": ("r", 2),
            },
            9: {
                "$": ("r", 3),
            },
            10: {
                "lbrace": ("s", 13),
            },
            11: {
                "semi": ("s", 15),
                "assign": ("s", 16),
                "lparen": ("s", 14),
            },
            12: {
                "semi": ("s", 17),
            },
            13: {
                "vtype": ("s", 6),
                "rbrace": ("r", 38),
                "VDECL": ("goto", 19),
                "FDECL": ("goto", 20),
                "ODECL": ("goto", 18),
            },
            14: {
                "vtype": ("s", 22),
                "rparen": ("r", 21),
                "ARG": ("goto", 21),
            },
            15: {
                "vtype": ("r", 5),
                "id": ("r", 5),
                "rbrace": ("r", 5),
                "if": ("r", 5),
                "while": ("r", 5),
                "return": ("r", 5),
                "class": ("r", 5),
                "$": ("r", 5),
            },
            16: {
                "id": ("s", 31),
                "literal": ("s", 25),
                "character": ("s", 26),
                "boolstr": ("s", 27),
                "lparen": ("s", 30),
                "num": ("s", 32),
                "RHS": ("goto", 23),
                "EXPR": ("goto", 24),
                "T": ("goto", 28),
                "F": ("goto", 29),
            },
            17: {
                "vtype": ("r", 6),
                "id": ("r", 6),
                "rbrace": ("r", 6),
                "if": ("r", 6),
                "while": ("r", 6),
                "return": ("r", 6),
                "class": ("r", 6),
                "$": ("r", 6),
            },
            18: {
                "rbrace": ("s", 33),
            },
            19: {
                "vtype": ("s", 6),
                "rbrace": ("r", 38),
                "VDECL": ("goto", 19),
                "FDECL": ("goto", 20),
                "ODECL": ("goto", 34),
            },
            20: {
                "vtype": ("s", 6),
                "rbrace": ("r", 38),
                "VDECL": ("goto", 19),
                "FDECL": ("goto", 20),
                "ODECL": ("goto", 35),
            },
            21: {
                "rparen": ("s", 36),
            },
            22: {
                "id": ("s", 37),
            },
            23: {
                "semi": ("r", 7),
            },
            24: {
                "semi": ("r", 8),
            },
            25: {
                "semi": ("r", 9),
            },
            26: {
                "semi": ("r", 10),
            },
            27: {
                "semi": ("r", 11),
            },
            28: {
                "semi": ("r", 13),
                "addsub": ("s", 38),
                "rparen": ("r", 13),
            },
            29: {
                "semi": ("r", 15),
                "addsub": ("r", 15),
                "multdiv": ("s", 39),
                "rparen": ("r", 15),
            },
            30: {
                "id": ("s", 31),
                "lparen": ("s", 30),
                "num": ("s", 32),
                "EXPR": ("goto", 40),
                "T": ("goto", 28),
                "F": ("goto", 29),
            },
            31: {
                "semi": ("r", 17),
                "addsub": ("r", 17),
                "multdiv": ("r", 17),
                "rparen": ("r", 17),
            },
            32: {
                "semi": ("r", 18),
                "addsub": ("r", 18),
                "multdiv": ("r", 18),
                "rparen": ("r", 18),
            },
            33: {
                "vtype": ("r", 35),
                "class": ("r", 35),
                "$": ("r", 35),
            },
            34: {
                "rbrace": ("r", 36),
            },
            35: {
                "rbrace": ("r", 37),
            },
            36: {
                "lbrace": ("s", 41),
            },
            37: {
                "rparen": ("r", 23),
                "comma": ("s", 43),
                "MOREARGS": ("goto", 42),
            },
            38: {
                "id": ("s", 31),
                "lparen": ("s", 30),
                "num": ("s", 32),
                "EXPR": ("goto", 44),
                "T": ("goto", 28),
                "F": ("goto", 29),
            },
            39: {
                "id": ("s", 31),
                "lparen": ("s", 30),
                "num": ("s", 32),
                "T": ("goto", 45),
                "F": ("goto", 29),
            },
            40: {
                "rparen": ("s", 46),
            },
            41: {
                "vtype": ("s", 53),
                "id": ("s", 54),
                "rbrace": ("r", 25),
                "if": ("s", 51),
                "while": ("s", 52),
                "return": ("r", 25),
                "VDECL": ("goto", 49),
                "ASSIGN": ("goto", 50),
                "BLOCK": ("goto", 47),
                "STMT": ("goto", 48),
            },
            42: {
                "rparen": ("r", 20),
            },
            43: {
                "vtype": ("s", 55),
            },
            44: {
                "semi": ("r", 12),
                "rparen": ("r", 12),
            },
            45: {
                "semi": ("r", 14),
                "addsub": ("r", 14),
                "rparen": ("r", 14),
            },
            46: {
                "semi": ("r", 16),
                "addsub": ("r", 16),
                "multdiv": ("r", 16),
                "rparen": ("r", 16),
            },
            47: {
                "return": ("s", 57),
                "RETURN": ("goto", 56),
            },
            48: {
                "vtype": ("s", 53),
                "id": ("s", 54),
                "rbrace": ("r", 25),
                "if": ("s", 51),
                "while": ("s", 52),
                "return": ("r", 25),
                "VDECL": ("goto", 49),
                "ASSIGN": ("goto", 50),
                "BLOCK": ("goto", 58),
                "STMT": ("goto", 48),
            },
            49: {
                "vtype": ("r", 26),
                "id": ("r", 26),
                "rbrace": ("r", 26),
                "if": ("r", 26),
                "while": ("r", 26),
                "return": ("r", 26),
            },
            50: {
                "semi": ("s", 59),
            },
            51: {
                "lparen": ("s", 60),
            },
            52: {
                "lparen": ("s", 61),
            },
            53: {
                "id": ("s", 62),
                "ASSIGN": ("goto", 12),
            },
            54: {
                "assign": ("s", 16),
            },
            55: {
                "id": ("s", 63),
            },
            56: {
                "rbrace": ("s", 64),
            },
            57: {
                "id": ("s", 31),
                "literal": ("s", 25),
                "character": ("s", 26),
                "boolstr": ("s", 27),
                "lparen": ("s", 30),
                "num": ("s", 32),
                "RHS": ("goto", 65),
                "EXPR": ("goto", 24),
                "T": ("goto", 28),
                "F": ("goto", 29),
            },
            58: {
                "rbrace": ("r", 24),
                "return": ("r", 24),
            },
            59: {
                "vtype": ("r", 27),
                "id": ("r", 27),
                "rbrace": ("r", 27),
                "if": ("r", 27),
                "while": ("r", 27),
                "return": ("r", 27),
            },
            60: {
                "boolstr": ("s", 68),
                "lparen": ("s", 67),
                "COND": ("goto", 66),
            },
            61: {
                "boolstr": ("s", 68),
                "lparen": ("s", 67),
                "COND": ("goto", 69),
            },
            62: {
                "semi": ("s", 15),
                "assign": ("s", 16),
            },
            63: {
                "rparen": ("r", 23),
                "comma": ("s", 43),
                "MOREARGS": ("goto", 70),
            },
            64: {
                "vtype": ("r", 19),
                "rbrace": ("r", 19),
                "class": ("r", 19),
                "$": ("r", 19),
            },
            65: {
                "semi": ("s", 71),
            },
            66: {
                "rparen": ("s", 72),
            },
            67: {
                "boolstr": ("s", 68),
                "lparen": ("s", 67),
                "COND": ("goto", 73),
            },
            68: {
                "rparen": ("r", 31),
                "comp": ("r", 31),
            },
            69: {
                "rparen": ("s", 74),
            },
            70: {
                "rparen": ("r", 22),
            },
            71: {
                "rbrace": ("r", 34),
            },
            72: {
                "lbrace": ("s", 75),
            },
            73: {
                "comp": ("s", 76),
            },
            74: {
                "lbrace": ("s", 77),
            },
            75: {
                "vtype": ("s", 53),
                "id": ("s", 54),
                "rbrace": ("r", 25),
                "if": ("s", 51),
                "while": ("s", 52),
                "return": ("r", 25),
                "VDECL": ("goto", 49),
                "ASSIGN": ("goto", 50),
                "BLOCK": ("goto", 78),
                "STMT": ("goto", 48),
            },
            76: {
                "boolstr": ("s", 68),
                "lparen": ("s", 67),
                "COND": ("goto", 79),
            },
            77: {
                "vtype": ("s", 53),
                "id": ("s", 54),
                "rbrace": ("r", 25),
                "if": ("s", 51),
                "while": ("s", 52),
                "return": ("r", 25),
                "VDECL": ("goto", 49),
                "ASSIGN": ("goto", 50),
                "BLOCK": ("goto", 80),
                "STMT": ("goto", 48),
            },
            78: {
                "rbrace": ("s", 81),
            },
            79: {
                "rparen": ("s", 82),
            },
            80: {
                "rbrace": ("s", 83),
            },
            81: {
                "vtype": ("r", 33),
                "id": ("r", 33),
                "rbrace": ("r", 33),
                "if": ("r", 33),
                "while": ("r", 33),
                "else": ("s", 85),
                "return": ("r", 33),
                "ELSE": ("goto", 84),
            },
            82: {
                "rparen": ("r", 30),
                "comp": ("r", 30),
            },
            83: {
                "vtype": ("r", 29),
                "id": ("r", 29),
                "rbrace": ("r", 29),
                "if": ("r", 29),
                "while": ("r", 29),
                "return": ("r", 29),
            },
            84: {
                "vtype": ("r", 28),
                "id": ("r", 28),
                "rbrace": ("r", 28),
                "if": ("r", 28),
                "while": ("r", 28),
                "return": ("r", 28),
            },
            85: {
                "lbrace": ("s", 86),
            },
            86: {
                "vtype": ("s", 53),
                "id": ("s", 54),
                "rbrace": ("r", 25),
                "if": ("s", 51),
                "while": ("s", 52),
                "return": ("r", 25),
                "VDECL": ("goto", 49),
                "ASSIGN": ("goto", 50),
                "BLOCK": ("goto", 87),
                "STMT": ("goto", 48),
            },
            87: {
                "rbrace": ("s", 88),
            },
            88: {
                "vtype": ("r", 32),
                "id": ("r", 32),
                "rbrace": ("r", 32),
                "if": ("r", 32),
                "while": ("r", 32),
                "return": ("r", 32),
            },
        }