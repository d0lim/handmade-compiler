KEYWORD class
IDENTIFIER test
LBRACE {
VARIABLE TYPE int
IDENTIFIER main
LPAREN (
VARIABLE TYPE String
IDENTIFIER args
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER _aa_a
ASSIGNMENT OPERATOR =
SIGNED INTEGER 0
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER '8'
TERMINATING SYMBOL ;
VARIABLE TYPE boolean
IDENTIFIER __cc
ASSIGNMENT OPERATOR =
BOOLEAN STRING true
TERMINATING SYMBOL ;
VARIABLE TYPE String
IDENTIFIER d__d_0
ASSIGNMENT OPERATOR =
LITERAL STRING "Hello World 123"
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER if_123if
ASSIGNMENT OPERATOR =
SINGLE CHARACTER ' '
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER _123if0
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 0
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER publice
ASSIGNMENT OPERATOR =
SIGNED INTEGER -10
TERMINATING SYMBOL ;
KEYWORD if
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
IDENTIFIER _aa_a
ASSIGNMENT OPERATOR =
SIGNED INTEGER 3923
ARITHMETIC OPERATOR *
SIGNED INTEGER 41
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
ARITHMETIC OPERATOR /
SIGNED INTEGER 10
ARITHMETIC OPERATOR +
SIGNED INTEGER 2
TERMINATING SYMBOL ;
RBRACE }
KEYWORD else
LBRACE {
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER '3'
TERMINATING SYMBOL ;
RBRACE }
KEYWORD while
LPAREN (
BOOLEAN STRING false
RPAREN )
LBRACE {
IDENTIFIER __cc
ASSIGNMENT OPERATOR =
BOOLEAN STRING false
TERMINATING SYMBOL ;
RBRACE }
KEYWORD return
SIGNED INTEGER 0
TERMINATING SYMBOL ;
RBRACE }
RBRACE }
