KEYWORD class
IDENTIFIER test
LBRACE {
VARIABLE TYPE char
IDENTIFIER ch
ASSIGNMENT OPERATOR =
SINGLE CHARACTER 'c'
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER cl
ASSIGNMENT OPERATOR =
IDENTIFIER a
ARITHMETIC OPERATOR +
IDENTIFIER b
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER main
LPAREN (
VARIABLE TYPE int
IDENTIFIER num1
COMMA ,
VARIABLE TYPE String
IDENTIFIER str
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER _aa_a
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER 'c'
TERMINATING SYMBOL ;
VARIABLE TYPE boolean
IDENTIFIER __cc
ASSIGNMENT OPERATOR =
BOOLEAN STRING true
TERMINATING SYMBOL ;
VARIABLE TYPE String
IDENTIFIER d__d_0
ASSIGNMENT OPERATOR =
LITERAL STRING "Hello World"
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER _123if
ASSIGNMENT OPERATOR =
SINGLE CHARACTER ' '
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER _123if0
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 0
TERMINATING SYMBOL ;
KEYWORD if
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
IDENTIFIER _aa_a
ASSIGNMENT OPERATOR =
SIGNED INTEGER 3923
ARITHMETIC OPERATOR +
SIGNED INTEGER 41
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
TERMINATING SYMBOL ;
RBRACE }
KEYWORD else
LBRACE {
KEYWORD while
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
IDENTIFIER _aa_a
ASSIGNMENT OPERATOR =
IDENTIFIER _aa_a
ARITHMETIC OPERATOR +
SIGNED INTEGER 1
TERMINATING SYMBOL ;
RBRACE }
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER '3'
TERMINATING SYMBOL ;
RBRACE }
KEYWORD return
SIGNED INTEGER 0
TERMINATING SYMBOL ;
RBRACE }
VARIABLE TYPE int
IDENTIFIER function
LPAREN (
VARIABLE TYPE int
IDENTIFIER num
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER a
ASSIGNMENT OPERATOR =
SIGNED INTEGER 3
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER b
ASSIGNMENT OPERATOR =
SIGNED INTEGER 4
TERMINATING SYMBOL ;
IDENTIFIER num
ASSIGNMENT OPERATOR =
IDENTIFIER a
ARITHMETIC OPERATOR +
IDENTIFIER b
TERMINATING SYMBOL ;
KEYWORD return
IDENTIFIER num
TERMINATING SYMBOL ;
RBRACE }
RBRACE }
KEYWORD class
IDENTIFIER test2
LBRACE {
VARIABLE TYPE int
IDENTIFIER temp
LPAREN (
VARIABLE TYPE int
IDENTIFIER num1
COMMA ,
VARIABLE TYPE String
IDENTIFIER str
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER t
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER 'c'
TERMINATING SYMBOL ;
VARIABLE TYPE boolean
IDENTIFIER __cc
ASSIGNMENT OPERATOR =
BOOLEAN STRING true
TERMINATING SYMBOL ;
VARIABLE TYPE String
IDENTIFIER d__d_0
ASSIGNMENT OPERATOR =
LITERAL STRING "Hello World"
TERMINATING SYMBOL ;
VARIABLE TYPE char
IDENTIFIER _123if
ASSIGNMENT OPERATOR =
SINGLE CHARACTER ' '
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER _123if0
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 0
TERMINATING SYMBOL ;
KEYWORD if
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
IDENTIFIER t
ASSIGNMENT OPERATOR =
SIGNED INTEGER 3923
ARITHMETIC OPERATOR +
SIGNED INTEGER 41
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER -1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
ARITHMETIC OPERATOR -
SIGNED INTEGER 1
TERMINATING SYMBOL ;
KEYWORD if
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
RBRACE }
KEYWORD else
LBRACE {
VARIABLE TYPE int
IDENTIFIER d
ASSIGNMENT OPERATOR =
SIGNED INTEGER 5
TERMINATING SYMBOL ;
RBRACE }
RBRACE }
KEYWORD else
LBRACE {
RBRACE }
KEYWORD if
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
IDENTIFIER b_b123
ASSIGNMENT OPERATOR =
SINGLE CHARACTER '3'
TERMINATING SYMBOL ;
RBRACE }
KEYWORD else
LBRACE {
IDENTIFIER __cc
ASSIGNMENT OPERATOR =
BOOLEAN STRING false
TERMINATING SYMBOL ;
RBRACE }
KEYWORD return
SIGNED INTEGER 0
TERMINATING SYMBOL ;
RBRACE }
VARIABLE TYPE int
IDENTIFIER function1
LPAREN (
VARIABLE TYPE int
IDENTIFIER num
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER a
ASSIGNMENT OPERATOR =
SIGNED INTEGER 3
TERMINATING SYMBOL ;
VARIABLE TYPE int
IDENTIFIER b
ASSIGNMENT OPERATOR =
SIGNED INTEGER 4
TERMINATING SYMBOL ;
IDENTIFIER num
ASSIGNMENT OPERATOR =
LPAREN (
LPAREN (
IDENTIFIER a
ARITHMETIC OPERATOR +
IDENTIFIER b
RPAREN )
ARITHMETIC OPERATOR *
LPAREN (
IDENTIFIER a
ARITHMETIC OPERATOR -
IDENTIFIER b
RPAREN )
RPAREN )
ARITHMETIC OPERATOR +
IDENTIFIER b
TERMINATING SYMBOL ;
IDENTIFIER b
ASSIGNMENT OPERATOR =
IDENTIFIER b
ARITHMETIC OPERATOR *
LPAREN (
IDENTIFIER a
ARITHMETIC OPERATOR +
IDENTIFIER b
RPAREN )
TERMINATING SYMBOL ;
KEYWORD while
LPAREN (
BOOLEAN STRING true
COMPARISON OPERATOR !=
BOOLEAN STRING false
RPAREN )
LBRACE {
IDENTIFIER a
ASSIGNMENT OPERATOR =
IDENTIFIER a
ARITHMETIC OPERATOR +
SIGNED INTEGER 1
TERMINATING SYMBOL ;
KEYWORD while
LPAREN (
BOOLEAN STRING true
RPAREN )
LBRACE {
VARIABLE TYPE int
IDENTIFIER c
ASSIGNMENT OPERATOR =
SIGNED INTEGER 2
TERMINATING SYMBOL ;
RBRACE }
RBRACE }
VARIABLE TYPE String
IDENTIFIER str1
ASSIGNMENT OPERATOR =
LITERAL STRING "STR"
TERMINATING SYMBOL ;
KEYWORD return
IDENTIFIER num
ARITHMETIC OPERATOR +
IDENTIFIER a
ARITHMETIC OPERATOR *
IDENTIFIER b
TERMINATING SYMBOL ;
RBRACE }
VARIABLE TYPE String
IDENTIFIER function2
LPAREN (
VARIABLE TYPE String
IDENTIFIER str
COMMA ,
VARIABLE TYPE String
IDENTIFIER str1
COMMA ,
VARIABLE TYPE String
IDENTIFIER str2
COMMA ,
VARIABLE TYPE int
IDENTIFIER num1
COMMA ,
VARIABLE TYPE int
IDENTIFIER num2
COMMA ,
VARIABLE TYPE int
IDENTIFIER num3
RPAREN )
LBRACE {
KEYWORD return
IDENTIFIER str
TERMINATING SYMBOL ;
RBRACE }
VARIABLE TYPE int
IDENTIFIER function3
LPAREN (
RPAREN )
LBRACE {
KEYWORD return
SIGNED INTEGER 0
ARITHMETIC OPERATOR +
SIGNED INTEGER 1
ARITHMETIC OPERATOR *
SIGNED INTEGER -1
TERMINATING SYMBOL ;
RBRACE }
RBRACE }
KEYWORD class
IDENTIFIER test3
LBRACE {
VARIABLE TYPE int
IDENTIFIER function4
LPAREN (
RPAREN )
LBRACE {
KEYWORD return
SIGNED INTEGER 0
TERMINATING SYMBOL ;
RBRACE }
VARIABLE TYPE int
IDENTIFIER num
ASSIGNMENT OPERATOR =
SIGNED INTEGER -1231
TERMINATING SYMBOL ;
RBRACE }
